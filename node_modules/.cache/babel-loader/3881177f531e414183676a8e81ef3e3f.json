{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\developer\\\\projects\\\\discord-clone\\\\src\\\\component\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { setState } from 'react';\nimport '../css/chat.css';\nimport ChatHeader from './ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectedChaneId, selectedChanelName } from '../features/appSlice';\nimport { selectUser } from '../features/userSlice';\n\nconst Chat = () => {\n  _s();\n\n  const channelId = useSelector(selectedChaneId);\n  const user = useSelector(selectUser);\n  const channelName = useSelector(selectedChanelName);\n  const [input, setInput] = setState(\"\");\n  const [messages, setMessages] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      channelName: channelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          disabled: !channelId,\n          onChange: e => setInput(e.target.value),\n          type: \"text\",\n          placeholder: `Message #${channelName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chat__inputButton\",\n          type: \"submit\",\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__inputActions\",\n        children: [/*#__PURE__*/_jsxDEV(CardGiftcardIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GifIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"ERwWv9Bdtkg+fddKvI3zQR/k8mE=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/developer/projects/discord-clone/src/component/Chat.js"],"names":["React","setState","ChatHeader","AddCircleIcon","CardGiftcardIcon","GifIcon","EmojiEmotionsIcon","Message","useSelector","selectedChaneId","selectedChanelName","selectUser","Chat","channelId","user","channelName","input","setInput","messages","setMessages","useState","map","message","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,sBAApD;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,SAAS,GAAGL,WAAW,CAACC,eAAD,CAA7B;AACA,QAAMK,IAAI,GAAGN,WAAW,CAACG,UAAD,CAAxB;AACA,QAAMI,WAAW,GAAGP,WAAW,CAACE,kBAAD,CAA/B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,EAAxC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEL;AAAzB;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACKG,QAAQ,CAACG,GAAT,CAAcC,OAAD,iBACV,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAO,UAAA,KAAK,EAAEN,KAAd;AACI,UAAA,QAAQ,EAAE,CAACH,SADf;AAEI,UAAA,QAAQ,EAAGU,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;AAGI,UAAA,IAAI,EAAC,MAHT;AAGgB,UAAA,WAAW,EAAG,YAAWV,WAAY;AAHrD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAaI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI,QAAC,gBAAD;AAAkB,UAAA,QAAQ,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,iBAAD;AAAmB,UAAA,QAAQ,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAtCD;;GAAMH,I;UACgBJ,W,EACLA,W,EACOA,W;;;KAHlBI,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React, { setState } from 'react';\r\nimport '../css/chat.css'\r\nimport ChatHeader from './ChatHeader'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard'\r\nimport GifIcon from '@material-ui/icons/Gif'\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions'\r\nimport Message from './Message'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectedChaneId, selectedChanelName } from '../features/appSlice';\r\nimport { selectUser } from '../features/userSlice'\r\n\r\n\r\nconst Chat = () => {\r\n    const channelId = useSelector(selectedChaneId);\r\n    const user = useSelector(selectUser);\r\n    const channelName = useSelector(selectedChanelName)\r\n    const [input, setInput] = setState(\"\");\r\n    const [messages, setMessages] = useState();\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatHeader channelName={channelName} />\r\n\r\n            <div className=\"chat__messages\">\r\n                {messages.map((message) => (\r\n                    <Message />\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat__input\">\r\n                <AddCircleIcon fontSize=\"large\" />\r\n                <form  >\r\n                    <input value={input}\r\n                        disabled={!channelId}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        type=\"text\" placeholder={`Message #${channelName}`}\r\n                    />\r\n                    <button className=\"chat__inputButton\" type='submit'>\r\n                        Send Message\r\n                    </button>\r\n                </form>\r\n\r\n                <div className=\"chat__inputActions\">\r\n                    <CardGiftcardIcon fontSize=\"large\" />\r\n                    <GifIcon fontSize=\"large\" />\r\n                    <EmojiEmotionsIcon fontSize=\"large\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}