{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\developer\\\\projects\\\\discord-clone\\\\src\\\\component\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../css/chat.css';\nimport ChatHeader from './ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectedChaneId, selectedChanelName } from '../features/appSlice';\nimport { selectUser } from '../features/userSlice';\nimport db from '../firebase';\nimport firebase from 'firebase';\n\nconst Chat = () => {\n  _s();\n\n  const channelId = useSelector(selectedChaneId);\n  const user = useSelector(selectUser);\n  const channelName = useSelector(selectedChanelName);\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState();\n  useEffect(() => {\n    if (channelId) {\n      db.collection('channels').doc(channelId).collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n        setMessages(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n  }, [channelId]);\n\n  const sendMessages = e => {\n    e.preventDefault();\n    db.collection('channels').doc('channelId').collection('message').add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      user: user\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      channelName: channelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__messages\",\n      children: messages === null || messages === void 0 ? void 0 : messages.map(message => /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          disabled: !channelId,\n          onChange: e => setInput(e.target.value),\n          type: \"text\",\n          placeholder: `Message #${input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessages,\n          className: \"chat__inputButton\",\n          type: \"submit\",\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__inputActions\",\n        children: [/*#__PURE__*/_jsxDEV(CardGiftcardIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GifIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"BL/UVfNITgN+QVWz6ew0PxIPnEs=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/developer/projects/discord-clone/src/component/Chat.js"],"names":["React","useState","useEffect","ChatHeader","AddCircleIcon","CardGiftcardIcon","GifIcon","EmojiEmotionsIcon","Message","useSelector","selectedChaneId","selectedChanelName","selectUser","db","firebase","Chat","channelId","user","channelName","input","setInput","messages","setMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","sendMessages","e","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../css/chat.css'\r\nimport ChatHeader from './ChatHeader'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard'\r\nimport GifIcon from '@material-ui/icons/Gif'\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions'\r\nimport Message from './Message'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectedChaneId, selectedChanelName } from '../features/appSlice';\r\nimport { selectUser } from '../features/userSlice'\r\nimport db from '../firebase'\r\nimport firebase from 'firebase'\r\n\r\n\r\nconst Chat = () => {\r\n    const channelId = useSelector(selectedChaneId);\r\n    const user = useSelector(selectUser);\r\n    const channelName = useSelector(selectedChanelName)\r\n    const [input, setInput] = useState(\"\");\r\n    const [messages, setMessages] = useState();\r\n\r\n    useEffect(() => {\r\n        if (channelId) {\r\n            db.collection('channels').doc(channelId)\r\n                .collection('messages')\r\n                .orderBy('timestamp', 'desc')\r\n                .onSnapshot((snapshot) => {\r\n                    setMessages(snapshot.docs.map((doc) => doc.data()))\r\n                });\r\n        }\r\n    }, [channelId]);\r\n\r\n    const sendMessages = e => {\r\n        e.preventDefault();\r\n\r\n        db.collection('channels').doc('channelId').collection('message').add(\r\n            {\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                message: input,\r\n                user: user,\r\n            }\r\n        );\r\n        setInput('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatHeader channelName={channelName} />\r\n\r\n            <div className=\"chat__messages\">\r\n                {messages?.map((message) => (\r\n                    <Message />\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat__input\">\r\n                <AddCircleIcon fontSize=\"large\" />\r\n                <form  >\r\n                    <input\r\n                        value={input}\r\n                        disabled={!channelId}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        type=\"text\" placeholder={`Message #${input}`}\r\n                    />\r\n                    <button onClick={sendMessages} className=\"chat__inputButton\" type='submit'>\r\n                        Send Message\r\n                    </button>\r\n                </form>\r\n\r\n                <div className=\"chat__inputActions\">\r\n                    <CardGiftcardIcon fontSize=\"large\" />\r\n                    <GifIcon fontSize=\"large\" />\r\n                    <EmojiEmotionsIcon fontSize=\"large\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}